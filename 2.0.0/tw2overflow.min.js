/*! tw2autofarm.min.js@2.0.0 | Licence MIT */
if(__debug=!1,AutoFarm=function(){function a(a={}){return b(),this.version="2.0.0",this.defaults={maxDistance:10,minDistance:0,maxTravelTime:"01:00:00",randomBase:3,presetName:"",groupIgnore:"",groupInclude:"",groupOnly:"",minPoints:0,maxPoints:12500,eventsLimit:20,ignoreOnLoss:!1,language:"",priorityTargets:!0},this.settings=angular.merge({},this.defaults,a),this.villages=null,this.village=null,this.singleVillage=null,this.targets={},this.target=null,this.eventListeners={},this.eventsEnabled=!0,this.presets=[],this.groupIgnore=null,this.ignoredVillages=[],this.groupInclude=null,this.includedVillages=[],this.groupOnly=null,this.indexes=null,this.waiting={},this.waitingReturn=!1,this.lastError="",this.commander=new AutoFarmCommander(this),this.priorityTargets={},this.updateExceptionGroups(),this.updateExceptionVillages(),this.updatePlayerVillages(),this.updatePresets(),this.updateIndexes(),this.listeners(),this.languages(),this}function b(){__debug&&console.log.apply(this,arguments)}let c=angular.element(document).scope(),d=injector.get("modelDataService"),e=injector.get("socketService"),f=injector.get("routeProvider"),g=injector.get("eventTypeProvider"),h=d.getPresetList(),i=require("helper/math"),j=require("conf/conf"),k=require("helper/mapconvert"),l=require("struct/MapData");rpreset=/(\(|\{|\[|\"|\')[^\)\}\]\"\']+(\)|\}|\]|\"|\')/;return a.prototype.start=function(){return this.presets.length?(this.commander=new AutoFarmCommander(this),this.commander.start(),!0):this.event("noPreset")},a.prototype.stop=function(){return this.commander.stop(),this.event("pause"),!0},a.prototype.updateSettings=function(a){b();let c={},d={groupIgnore:["groups"],groupInclude:["groups","targets"],groupOnly:["groups","villages","targets"],presetName:["preset"],minDistance:["targets"],maxDistance:["targets"],minPoints:["targets"],maxPoints:["targets"]};for(let b in a){if(a[b]!==this.settings[b]){let a=d[b];if(d.hasOwnProperty(b))for(let b=0;b<a.length;b++)c[a[b]]=!0}this.settings[b]=a[b]}c.groups&&(this.updateExceptionGroups(),this.updateExceptionVillages()),c.villages&&this.updatePlayerVillages(),c.preset&&this.updatePresets(),c.targets&&(this.targets={}),this.commander.running&&this.waitingReturn&&this.disableEvents(()=>{this.stop();this.start()})},a.prototype.disableEvents=function(a){b(),this.eventsEnabled=!1,a(),this.eventsEnabled=!0},a.prototype.nextTarget=function(){b();let a=this.village.id;if(!this.targets[a])return this.commander.analyse(),!1;let c=this.targets[a],d=++this.indexes[a],e=!1;for(;d<c.length;d++){let a=c[d];if(!this.ignoredVillages.includes(a.id)){this.target=a,e=!0;break}this.event("ignoredTarget",[a])}return e||(this.target=c[0],this.indexes[a]=0),this.saveIndexes(),!0},a.prototype.checkTarget=function(){let a=this.village.id,b=this.indexes[a],c=this.targets[a],d=this.priorityTargets[a];if(this.settings.priorityTargets&&d&&d.length){let b=this.priorityTargets[a].pop();if(this.ignoredVillages.includes(b))return checkTarget();let d=this.targets[a].findIndex(a=>a.id===b);return this.target=c[d],this.event("priorityTargetSelected",[this.target]),!0}for(;b<c.length;b++){let d=c[b];if(d){if(this.ignoredVillages.includes(d.id))continue;return this.target=d,this.indexes[a]=b,!0}}return!1},a.prototype.getTargets=function(a){b();let c=this.village.position,d=this.village.id;if(d in this.targets)return a();let e=j.MAP_CHUNK_SIZE,f=c.x-e,g=c.y-e,h=2*e,m=2*e,n=()=>{let a=l.hasTownDataInChunk(f,g);if(a)o();else{this.event("startLoadingTargers");let a=k.scaledGridCoordinates(f,g,h,m,e),b=a.length,c=0;l.loadTownDataAsync(f,g,h,m,()=>{++c===b&&(this.event("endLoadingTargers"),o())})}return},o=()=>{let a=l.loadTownData(f,g,h,m,e);let b=a.length;for(;b--;){let c=a[b],d=c.data;for(let a in d){let b=d[a];for(let a in b){let c=b[a];q(c)}}}r()},p=[],q=a=>{if(a.id<0||a.id===d)return;if(a.attack_protection)return;if(!this.includedVillages.includes(a.id)&&a.character_id)return;if(a.points<this.settings.minPoints)return;if(a.points>this.settings.maxPoints)return;let b=i.actualDistance(c,a);if(b<this.settings.minDistance)return;if(b>this.settings.maxDistance)return;p.push({x:a.x,y:a.y,distance:b,id:a.id,name:a.name,pid:a.character_id})},r=()=>{if(0===p.length){let b=this.nextVillage();return b?this.getTargets(a):this.event("noTargets"),!1}this.targets[d]=p.sort(function(a,b){return a.distance-b.distance});this.indexes.hasOwnProperty(d)||(this.indexes[d]=0,this.saveIndexes());this.target=this.targets[d][0];a()};return n()},a.prototype.nextVillage=function(){if(b(),this.singleVillage)return!1;let a=this.villages.filter(a=>!this.waiting[a.id]);if(!a.length)return this.event("noVillages"),!1;if(1===a.length)return this.village=a[0],this.event("nextVillage",[this.village]),!0;let c=a.indexOf(this.village)+1;return this.village=a[c]?a[c]:a[0],this.event("nextVillage",[this.village]),!0},a.prototype.selectVillage=function(a){b();let c=this.villages.indexOf(a);return-1!==c&&(this.village=this.villages[c],!0)},a.prototype.updateIndexes=function(){b();let a=`${player.getId()}_autofarm_indexes`,c=localStorage[a];if(!c)return void(this.indexes={});this.indexes=JSON.parse(c);let d=this.indexes.last;Date.now()-d>18e5&&(localStorage.removeItem(a),this.indexes={})},a.prototype.saveIndexes=function(){b();let a=`${player.getId()}_autofarm_indexes`;this.indexes.last=Date.now(),localStorage[a]=JSON.stringify(this.indexes)},a.prototype.event=function(a,c){if(b(),!this.eventsEnabled)return this;if(a in this.eventListeners){let b=this.eventListeners[a];for(let a=0;a<b.length;a++)b[a].apply(this,c)}return this},a.prototype.on=function(a,b){return"function"==typeof b&&(a in this.eventListeners||(this.eventListeners[a]=[]),this.eventListeners[a].push(b)),this},a.prototype.updatePresets=function(c){b();let d=b=>{this.presets=[];for(let c in b)if(b.hasOwnProperty(c)){let d=b[c].name,e=d.replace(rpreset,"").trim();e===this.settings.presetName&&(b[c].cleanName=e,b[c].units=a.cleanPresetUnits(b[c].units),this.presets.push(b[c]))}c&&c()};h.isLoaded()?d(h.presets):e.emit(f.GET_PRESETS,{},a=>{d(a.presets)})},a.prototype.assignPresets=function(a,c){b(),e.emit(f.ASSIGN_PRESETS,{village_id:this.village.id,preset_ids:a},c)},a.prototype.checkPresets=function(a){b();let c=this.village.id,d=h.getPresetsByVillageId(c),e=!1,f=[];for(preset of this.presets)d.hasOwnProperty(preset.id)||(e=!0,f.push(preset.id));if(e){for(let a in d)f.push(a);this.assignPresets(f,a)}else a()},a.cleanPresetUnits=function(a){let b={};for(let c in a)a[c]>0&&(b[c]=a[c]);return b},a.prototype.updateExceptionGroups=function(){b();let a=["groupIgnore","groupInclude","groupOnly"],c=d.getGroupList().getGroups();for(let b of a){this[b]=null;for(let a in c){let d=c[a];if(d.name===this.settings[b]){this[b]={name:d.name,id:d.id};break}}}},a.prototype.updateExceptionVillages=function(){b();let a=d.getGroupList();this.ignoredVillages=[],this.includedVillages=[],this.groupIgnore&&(this.ignoredVillages=a.getGroupVillageIds(this.groupIgnore.id)),this.groupInclude&&(this.includedVillages=a.getGroupVillageIds(this.groupInclude.id))},a.prototype.updatePlayerVillages=function(){let a=player.getVillageList();if(a=a.map(a=>new AutoFarmVillage(a)),a=a.filter(a=>!this.ignoredVillages.includes(a.id)),this.groupOnly){let b=d.getGroupList(),c=b.getGroupVillageIds(this.groupOnly.id);a=a.filter(a=>c.includes(a.id))}if(this.villages=a,this.singleVillage=1===this.villages.length,this.village=this.villages[0],this.commander.running&&this.waitingReturn)for(let b=0;b<a.length;b++){let c=a[b];if(!this.waiting[c.id]){this.waitingReturn=!1,this.commander.analyse();break}}this.event("villagesUpdate")},a.prototype.ignoreVillage=function(a){if(!this.groupIgnore)return!1;e.emit(f.GROUPS_LINK_VILLAGE,{group_id:this.groupIgnore.id,village_id:a.id},()=>{this.event("ignoredVillage",[a])})},a.prototype.targetExists=function(a){for(let b in this.targets){let c=this.targets[b];for(let b=0;b<c.length;b++){let d=c[b];if(d.id===a)return d}}return!1},a.prototype.listeners=function(){b();let a=()=>{this.updatePresets();this.event("presetsChange");this.presets.length||this.commander.running&&(this.event("noPreset"),this.stop())},d=(a,b)=>{this.updateExceptionGroups();this.updateExceptionVillages();this.event("groupsChanged")},h=((a,b)=>{let d=g.VILLAGE_UNIT_INFO;Math.random().toString(36).substr(2);var e=c.$on(d,(c,d)=>{d.village_id===a&&(e(),this.event("attacking"),b())})},(a,b)=>{let c=b.origin.id;if(this.waiting[c])return delete this.waiting[c],this.waitingReturn&&(this.waitingReturn=!1,this.commander.running&&(this.event("restartingCommands"),this.selectVillage(c),setTimeout(()=>{this.commander.analyse()},1e4))),!1}),i=(a,b)=>{this.updatePlayerVillages();if(!this.groupInclude)return!1;this.groupInclude.id===b.group_id&&(this.targets={})},j=a=>{if(a.attCharacterId!==player.getId())return!1;let b=this.targetExists(a.defVillageId);if(!b)return!1;let c=a.attLosses;for(let a in c)if(c[a]>0)return this.ignoreVillage(b),!0;return!1},k=a=>{console.warn("### priorityTargets ### report->load");console.log(a);let b=a.haul;let c=b.wood+b.clay+b.iron;if(c===a.capacity){let b=a.attVillageId,c=a.defVillageId;this.priorityTargets[b]=this.priorityTargets[b]||[],this.priorityTargets[b].push(c)}},m=(a,b)=>{if("attack"!==b.type)return!1;let c=this.settings;if(!c.ignoreOnLoss&&!c.priorityTargets)return!1;e.emit(f.REPORT_GET,{id:b.id},a=>{e.emit(f.REPORT_MARK_UNREAD,{reports:[a.id]},function(){});let b=a.ReportAttack;c.ignoreOnLoss&&j(b);c.priorityTargets&&k(b)})},n=(a,b)=>{this.commander.running&&this.disableEvents(()=>{this.stop();this.start()})};c.$on(g.COMMAND_RETURNED,h),c.$on(g.ARMY_PRESET_UPDATE,a),c.$on(g.ARMY_PRESET_DELETED,a),c.$on(g.GROUPS_UPDATED,d),c.$on(g.GROUPS_CREATED,d),c.$on(g.GROUPS_DESTROYED,d),c.$on(g.GROUPS_VILLAGE_LINKED,i),c.$on(g.GROUPS_VILLAGE_UNLINKED,i),c.$on(g.REPORT_NEW,m),l.setRequestFn(function(a){e.emit(f.MAP_GETVILLAGES,a)}),c.$on(g.RECONNECT,n)},a.prototype.hasTargets=function(){return this.targets.hasOwnProperty(this.village.id)},a.prototype.hasVillage=function(){return!!this.village},a.prototype.isWaiting=function(){return this.waiting.hasOwnProperty(this.village.id)},a.prototype.isIgnored=function(){return this.ignoredVillages.includes(this.village.id)},a.prototype.isAllWaiting=function(){for(let a=0;a<this.villages.length;a++){let b=this.villages[a].id;if(!this.waiting.hasOwnProperty(b))return!1}return!0},a.prototype.languages=function(){b();let a={pt_br:{title:"Farm Overflow",events:{attacking:"Atacando.",commandLimit:"Limite de 50 ataques atingido, aguardando retorno.",lastAttack:"Último ataque",nextVillage:"Alternando para a aldeia {0}",noPreset:"Nenhuma predefinição disponível.",noSelectedVillage:"Nenhuma aldeia disponível.",noUnits:"Sem unidades na aldeia, aguardando ataques retornarem.",noUnitsNoCommands:"Nenhuma aldeia tem tropas nem ataques retornando.",noVillages:"Nenhuma aldeia disponível, aguardando ataques retornarem.",nothingYet:"Nada por aqui ainda...",paused:"Pausado.",presetFirst:"Configure uma predefinição primeiro!",selectedVillage:"Aldeia selecionada",sendCommand:"{0} ataca {1}",status:"Status",loadingTargets:"Carregando alvos...",checkingTargets:"Checando alvos...",restartingCommands:"Reiniciando comandos...",ignoredVillage:"Alvo {0} ignorado! (causou baixas)",priorityTargetAdded:"{0} adicionado as prioridades."},general:{disabled:"Desativado",events:"Eventos",info:"Informações",none:"Nenhum",pause:"Pausar",paused:"AutoFarm pausado.",settings:"Configurações",start:"Iniciar",started:"AutoFarm iniciado."},info:{development:["Desenvolvimento","Desenvolvido do <span class='brazil'>Brasil</span> com <strong style='color:#ad0202'>❤</strong> por","Qualquer email reportando erro, sugestão, mensagem amor ou ódio será bem vinda.","Esse projeto é"],groupOnly:["Usando apenas aldeias de um grupo para atacar","Você pode selecionar um grupo especifico para usar apenas as aldeias desse grupo para enviar os ataques."],ignore:["Ignorando aldeias com grupo","Você pode selecionar um grupo nas configurações para que todas aldeias atribuidas a esse grupo sejam ignorados pelo AutoFarm. <strong>O grupo serve tanto para os alvos quanto para suas aldeias</strong>."],include:["Incluindo alvos com grupo","Assim como ignorar aldeias, você pode incluir como alvos aldeias de jogadores. Todas aldeias do grupo que estiverem fora da distância máxima não seram incluidas."],presets:["Configurando predefinições","As predefinição que não estiverem ativadas nas aldeias serão ativadas automaticamente.","Atenção! Se as predefinições tiverem <strong>oficiais</strong>, eles <strong>serão utilizados</strong>.","É possível utilizar mais de uma predefinição, <strong>desde que tenham uma mesma identificação</strong>.","É permitido adicionar uma descrição em conjunto com a identificação da predefinição. A descrição deve estar no final do nome e entre chaves, colchetes, parênteses, aspas ou aspas-simples.","Exemplo de alguns nome de predefinições:"],randomBase:["Base do intervalo aleatório","Esse intervalo é usado para gerar um tempo aleatório (em segundos) entre cada ataque evitando o script ser detectado. <strong>Quanto maior melhor</strong>."],ignoreOnLoss:["Ignorando alvos que causam perdas (Experimental)","Qualquer ataque que tenha causado alguma perca nas suas tropas será ignorado em ataques futuros.",'<strong>Atenção</strong>: Para essa funcionalidade funcionar é preciso ter a opção "Ignorando aldeias com grupo" configurada.','Todas aldeias que forem ignoradas será avisado na aba "Avisos".'],priorityTargets:["Priorizando alvos (Experimental)","Quando ativada, todos os alvos que tiverem relatórios com saque no máximo, serão adicionados na lista de prioridades para reenviar o ataque assim que possível."]},settings:{basicSettings:"Configurações Básicas",eventsLimit:"Número máximo de registros",groupIgnore:"Ignorar aldeias do grupo",groupInclude:"Incluir alvos do grupo",groupOnly:"Atacar apenas com aldeias do grupo",language:"Linguagem da interface (requer reinício)",maxDistance:"Distância máxima dos alvos",maxTravelTime:"Tempo máximo de viagem (ida)",minDistance:"Distância mínima dos alvos",others:"Outros",presetName:"Predefinição das tropas",randomBase:"Base do intervalo aleatório (segundos)",ignoreOnLoss:"Ignorar aldeias que causarem perdas<br/>(Necessita de um grupo de ignorados ativo)",save:"Salvar configurações",saved:"Configurações salvas!",filters:"Filtros",presets:"Predefinições",villages:"Aldeias",security:"Segurança",minPoints:"Pontuação mínima dos alvos",maxPoints:"Pontuação máxima dos alvos",priorityTargets:"Priorizar alvos com de saque lotado (Experimental)"}},en_us:{title:"Farm Overflow",events:{attacking:"Attacking.",commandLimit:"Limit of 50 attacks reached, waiting return.",lastAttack:"Last attack",nextVillage:"Changing to village {0}",noPreset:"No presets avaliable.",noSelectedVillage:"No villages avaliable.",noUnits:"No units avaliable in village, waiting attacks return.",noUnitsNoCommands:"No villages has units or commands returning.",noVillages:"No villages avaliable, waiting attacks return.",nothingYet:"Nothing available yet...",paused:"Paused.",presetFirst:"Set a preset first!",selectedVillage:"Village selected",sendCommand:"{0} attack {1}",status:"Status",loadingTargets:"Loading targets...",checkingTargets:"Checking targets...",restartingCommands:"Restarting commands...",ignoredVillage:"Target {0} ignored! (caused loss)",priorityTargetAdded:"{0} added to priorities."},general:{disabled:"Disabled",events:"Task Logs",info:"Information",none:"None",pause:"Pause",paused:"AutoFarm paused.",settings:"Settings",start:"Start",started:"AutoFarm started."},info:{development:["Development","Developed from <span class='brazil'>Brazil</span> with <strong style='color:#ad0202'>❤</strong> by","Any email reporting error, suggestion, messages of love or hate will be wellcome.","This project is"],groupOnly:["Using only villages from a group to attack","You can select a specific group to use only the villages from that group to attack."],ignore:["Ignoring villages from a group","You can select ignore targets setting a Ignore Group. All villages that assigned in that group will be ignored by the script. <strong>The group works on targets and your own villages as well</strong>."],include:["Including targets with a group","As well as ignoring villages, you can include village targets of players. Works only in villages inside the maximum distance range."],presets:["Setting presets","The preset that hasn't assigned to the villages will be automatically.","Attention! If the presets have <strong>officers</strong>, they <strong>will be used</strong>.","It's possible to have more than one preset, <strong>since it has the same identification</strong>.","Is permitted include some description along side the identification. The description must be between keys, brackets, parentheses, single or double quotes.","Exemples of some preset names:"],randomBase:["Random interval base","That interval is a random period of time (in seconds) between each attack avoid the script to be detected by the game. <strong>The bigger the better</strong>."],ignoreOnLoss:["Ignoring targets that cause loss (Experimental)","This option will ignore any target that cause loss in your troops.","The target that cause any loss to your troops will be ignored in the future.",'<strong>Note</strong>: For this feature works properly, the option "Ignore villages from group" must be set.','All villages that are blocked will be warned in the tab "Warnings".'],priorityTargets:["Prioritizing targets (Experimental)","When activated, all targets that has full haul reports, will be added to the list of priorities, to resend the attack as soon as possible."]},settings:{basicSettings:"Basic Settings",eventsLimit:"Maximum length of events",groupIgnore:"Ignore villages from group",groupInclude:"Include targets from group",groupOnly:"Attack only with villages from group",language:"Interface language (require restart)",maxDistance:"Targets maximum distance",maxTravelTime:"Maximum travel time (going)",minDistance:"Targets minimum distance",others:"Others",presetName:"Preset of troops",randomBase:"Random interval base (seconds)",ignoreOnLoss:"Ignore villages that cause loss<br/>(Need a active group of ignoreds)",save:"Save settings",saved:"Settings saved!",filters:"Filters",presets:"Presets",villages:"Villages",security:"Security",minPoints:"Targets minimum points",maxPoints:"Targets maximum points",priorityTargets:"Prioritize targets with full loot report (Experimental)"}}},c=require("conf/locale").LANGUAGE,d={pt_pt:"pt_br",en_dk:"en_us"};if(c in d&&(c=d[c]),this.settings.language)this.lang=a[this.settings.language];else{let b=c in a?c:"en_us";this.lang=a[b],this.settings.language=b}},a}(),AutoFarmCommander=function(){function a(a){a=parseInt(a,10);let b=a+a/2,c=a-a/2;return Math.round(Math.random()*(b-c)+c)}function b(a){return a=a.split(":"),a[0]=60*parseInt(a[0],10)*60,a[1]=60*parseInt(a[1],10),a[2]=parseInt(a[2],10),a.reduce((a,b)=>a+b)}function c(a){this.autofarm=a,this.preventNextCommand=!1,this.timeoutId=null,this.running=!1}let d=angular.element(document).scope(),e=injector.get("routeProvider"),f=injector.get("eventTypeProvider"),g=injector.get("socketService"),h=injector.get("armyService"),i=require("helper/math");return c.prototype.start=function(){this.autofarm.event("start"),this.running=!0,this.analyse()},c.prototype.stop=function(){this.autofarm.event("pause"),this.running=!1,clearTimeout(this.timeoutId)},c.prototype.analyse=function(){let a=this.autofarm;return!!this.running&&(a.hasVillage()?a.isWaiting()||a.isIgnored()?(a.nextVillage()?this.analyse():a.event(a.lastError),!1):a.hasTargets()?a.checkTarget()?void a.checkPresets(()=>{if(a.village.countCommands()>=48)return this.handleError("commandLimit");let b=this.getPreset();if(b.error)return this.handleError(b.error);this.getPresetNext(b);this.send(b)}):(a.nextVillage()?this.analyse():a.event("noTargets"),!1):(a.getTargets(()=>{a.checkTarget()||a.nextVillage();this.analyse()}),!1):a.event("noVillageSelected"))},c.prototype.handleError=function(a){a=a||this.preventNextCommand;let b=this.autofarm;this.preventNextCommand=!1,b.lastError=a;let c=b.village.id;switch(a){case"timeLimit":b.nextTarget(),this.analyse();break;case"noUnits":if(b.event("noUnits",[b.village]),b.waiting[c]=!0,b.singleVillage){if(0===b.village.countCommands())return b.event("noUnitsNoCommands");b.waitingReturn=!0}else b.nextVillage()?this.analyse():b.waitingReturn=!0;break;case"commandLimit":if(b.waiting[c]=!0,b.singleVillage)b.waitingReturn=!0,b.event("commandLimitSingle",[b.village]);else{if(b.isAllWaiting())return b.event("commandLimitMulti",[b.village]),b.waitingReturn=!0,!1;b.nextVillage(),this.analyse()}}},c.prototype.getPreset=function(a){log("getPreset");let b=this.autofarm,c=!1,d=a||b.village.units;for(let a of b.presets){let b=!0;for(let c in a.units)d[c].in_town<a.units[c]&&(b=!1);if(b){if(this.checkPresetTime(a))return a;c=!0}else;}return{error:c?"timeLimit":"noUnits"}},c.prototype.getPresetNext=function(a){log("getPresetNext");let b=this.autofarm,c=angular.copy(b.village.units),d=a.units;for(let a in d)c[a].in_town-=d[a];let e=this.getPreset(c);e.error&&(this.preventNextCommand=e.error)},c.prototype.checkPresetTime=function(a){log("checkPresetTime");let c=this.autofarm,d=b(c.settings.maxTravelTime),e=c.village.position,f={x:c.target.x,y:c.target.y},g=i.actualDistance(e,f),j=h.calculateTravelTime(a,{barbarian:!c.village.pid,officers:!1});return d>h.getTravelTimeForDistance(a,j,g,"attack")},c.prototype.send=function(b,c){if(log("send"),!this.running)return!1;let d=this.autofarm;return this.simulate(),g.emit(e.SEND_PRESET,{start_village:d.village.id,target_village:d.target.id,army_preset_id:b.id,type:"attack"}),this.onSend(()=>{d.nextTarget();let b=a(d.settings.randomBase);this.timeoutId=setTimeout(()=>{if(this.preventNextCommand)return this.handleError();this.analyse()},1e3+1e3*b)}),!0},c.prototype.onSend=function(a){let b=this.autofarm,c=angular.copy(b.village.units),e=f.VILLAGE_UNIT_INFO,g=d.$on(e,(d,e)=>{if(b.village.id!==e.village_id)return!1;let f=b.village.units;let h=angular.equals(c,f);if(h)return!1;b.event("sendCommand",[b.village,b.target]);g();a()})},c.prototype.simulate=function(a){log("simulate");let b=this.autofarm;(()=>{g.emit(e.GET_ATTACKING_FACTOR,{target_id:b.target.id})})(),a&&a()},c}(),AutoFarmVillage=function(){function a(a){this.village=a,this.id=a.data.villageId,this.x=a.data.x,this.y=a.data.y,this.name=a.data.name,this.units=a.unitInfo.units,this.position=this.village.getPosition()}return a.prototype.countCommands=function(){return this.village.data.commands.incomingNoSpy.length+this.village.data.commands.outgoingNoSpy.length},a}(),AutoFarmInterface=function(){function a(a,b){return a.replace(/{(\d+)}/g,function(a,c){return void 0!==b[c].html?b[c].html:a})}function b(a,b){let c,d,e=/{{(.+?)}}/g,f="with(obj) { var r=[];\n",g=0,h=function(a,b){f+=b?a.match(/(^( )?(var|if|for|else|switch|case|break|{|}|;))(.*)?/g)?a+"\n":"r.push("+a+");\n":""!=a?'r.push("'+a.replace(/"/g,'\\"')+'");\n':""};for(;d=e.exec(a);)h(a.slice(g,d.index)),h(d[1],!0),g=d.index+d[0].length;h(a.substr(g,a.length-g)),f=(f+'return r.join(""); }').replace(/[\r\t\n]/g," ");try{c=new Function("obj",f).apply(b,[b])}catch(a){}return c}function c(a){return this.autofarm=a,this.newSettings={},this.activeTab="info",this.events=localStorage[`${player.getId()}_autofarm_lastEvents`]||[],this.events=JSON.parse(this.events),this.eventCount=1,this.buildStyle(),this.buildWindow(),this.bindTabs(),this.bindSettings(),this.bindEvents(),this.updateGroupList(),this.populateEvents(),a.updatePresets(()=>{this.updatePresetList()}),this.$close.on("click",()=>{this.closeWindow()}),j.add("esc",()=>{this.closeWindow()},["INPUT","SELECT","TEXTAREA"]),d.$on(f.WINDOW_CLOSED,()=>{this.closeWindow()}),this.$button.on("click",()=>{this.openWindow()}),j.add("z",()=>{this.openWindow()}),this}let d=angular.element(document).scope(),e=injector.get("modelDataService"),f=injector.get("eventTypeProvider"),g=injector.get("windowDisplayService"),h=injector.get("windowManagerService"),i=injector.get("$filter"),j=injector.get("hotkeys"),k=require("queues/EventQueue");return c.prototype.populateEvents=function(){let a=parseInt(this.autofarm.settings.eventsLimit,10);this.events.length>0&&this.$events.html("");for(let b=0;b<this.events.length&&!(this.eventCount>=a);b++)this.addEvent(this.events[b],!0),this.eventCount++},c.prototype.saveEvents=function(){let a=JSON.stringify(this.events);localStorage[`${player.getId()}_autofarm_lastEvents`]=a},c.prototype.buildStyle=function(){this.$style=document.createElement("style"),this.$style.type="text/css",this.$style.id="autofarm-style",this.$style.innerHTML='#interface-autofarm{position:relative;top:0;left:0;margin-bottom:10px}#interface-autofarm .button{white-space:nowrap;position:relative;top:0;left:0;width:60px;height:24px}#interface-autofarm .text,#interface-autofarm .quickview{margin:5px 0;font-size:12px}#interface-autofarm .quickview{display:none}#wrapper.window-open #interface-autofarm .button{left:720px}#autofarm-window{visibility:hidden}#autofarm-window p,#autofarm-window h3{color:#000}#autofarm-window p{margin:7px 0;text-align:center;padding:0 40px}#autofarm-window p span.sample{font-weight:bold;font-style:italic}#autofarm-window p span.brazil{color:green;font-weight:bold}#autofarm-window p .opensource{background:url(https://i.imgur.com/KFHdWXN.png);width:15px;height:15px;display:inline-block;vertical-align:-2px}#autofarm-window input[type=text],#autofarm-window input[type=number]{width:100%}#autofarm-window select{width:100%;padding:0 0 0 5px;font-size:14px;border:1px solid #976543;height:28px;text-decoration:none;text-align:left;border-radius:2px;font-weight:600;font-family:"Trebuchet MS";color:white;box-shadow:0 0 0 1px #421f09 inset,0 0 0 2px #976543 inset,0 0 0 3px #421f09 inset,0 -1px 1px 4px rgba(215,181,144,0.7) inset,0 0 1px 5px rgba(0,0,0,0.4) inset;-webkit-appearance:none;-moz-appearance:none;outline:none;background-image:url(https://i.imgur.com/SlaWRrX.png),url(https://i.imgur.com/e2qKrmX.png);background-repeat:no-repeat,repeat;background-position:293px -3px,top left;background-color:#b28e68}#autofarm-window .center{text-align:center}#autofarm-window .reduced{height:30px}#autofarm-window .autofarm-content-info a{font-weight:bold;color:#544231}#autofarm-settings input[type="text"],#autofarm-settings input[type="number"],#autofarm-settings select{color:black}#autofarm-settings [class^="icon-"]{display:inline;margin:0 9px 0 0}#autofarm-settings .icon-34x34-preset,#autofarm-settings .icon-26x26-time,#autofarm-settings .icon-26x26-info,#autofarm-settings .icon-26x26-double-arrow{zoom:.6}#autofarm-settings .icon-20x20-queue-indicator-short,#autofarm-settings .icon-20x20-queue-indicator-long,#autofarm-settings .icon-20x20-favourite{vertical-align:0;margin:0 5px 0 0}#autofarm-settings .icon-34x34-preset,#autofarm-settings .icon-26x26-time{vertical-align:3px}#autofarm-settings .icon-26x26-double-arrow{vertical-align:4px}#autofarm-settings .icon-26x26-info{vertical-align:5px}#autofarm-settings .icon-34x34-points-per-village{zoom:.5;vertical-align:6px}#autofarm-settings td{text-align:center}#autofarm-save{color:white;width:180px;height:25px;margin:6px;line-height:24px;border:none}@keyframes autofarmShowStatus{0%{width:60px}100%{width:220px}}@keyframes autofarmHideStatus{0%{width:220px}100%{width:60px}}.autofarm-show-status{animation:autofarmShowStatus .1s forwards}.autofarm-hide-status{animation:autofarmHideStatus .1s forwards}@-webkit-keyframes promo-animated{0%{background-position:0 50%}50%{background-position:100% 50%}100%{background-position:0 50%}}@-moz-keyframes promo-animated{0%{background-position:0 50%}50%{background-position:100% 50%}100%{background-position:0 50%}}@keyframes promo-animated{0%{background-position:0 50%}50%{background-position:100% 50%}100%{background-position:0 50%}}',document.querySelector("head").appendChild(this.$style)},c.prototype.buildWindow=function(){this.$wrapper=$("#wrapper"),this.$window=document.createElement("section"),this.$window.id="autofarm-window",this.$window.className="autofarm-window twx-window screen left";let a=angular.merge({version:this.autofarm.version,author:{name:"Relaxeaza",email:"mafrazzrafael@gmail.com",url:"https://gitlab.com/mafrazz/"}
},this.autofarm.lang),c=b('<div class="win-content message-list-wrapper searchable-list ng-scope"><header class="win-head"><h2 class="ng-binding">{{ this.title }} <span class="small">v{{ this.version }}</span></h2><ul class="list-btn"><li><a href="#" id="autofarm-close" class="size-34x34 btn-red icon-26x26-close"></a></li></ul></header><div class="win-main"><div class="tabs tabs-bg"><div class="tabs-three-col"><div class="tab" tab="info"><div class="tab-inner"><div><a href="#" class="btn-icon btn-orange">{{ this.general.info }}</a></div></div></div><div class="tab" tab="settings"><div class="tab-inner"><div><a href="#" class="btn-icon btn-orange">{{ this.general.settings }}</a></div></div></div><div class="tab" tab="log"><div class="tab-inner"><div><a href="#" class="btn-icon btn-orange">{{ this.general.events }}</a></div></div></div></div></div><div class="box-paper footer has-footer-upper autofarm-content-info"><p><img src="https://i.imgur.com/rbUaOGx.png"></p><h5 class="twx-section">{{ this.info.development[0] }}</h5><div class="text-center"><p>{{ this.info.development[1] }} <a href="{{ this.author.url }}">{{ this.author.name }}</a> &lt;{{ this.author.email }}&gt;</p><p>{{ this.info.development[2] }}</p><p>{{ this.info.development[3] }} <span class="opensource"></span> <a href="https://gitlab.com/scriptw/autofarm/">Open Source</a></p></div><h5 class="twx-section">{{ this.info.presets[0] }}</h5><div><p>{{ this.info.presets[1] }}</p><p>{{ this.info.presets[2] }}</p><p>{{ this.info.presets[3] }}</p><p>{{ this.info.presets[4] }}</p><p>{{ this.info.presets[5] }}</p><p>{{ this.info.presets[6] }}</p><p>{{ this.info.presets[7] }} <span class="sample">Farm (Spears)</span> — <span class="sample">Farm "Lança"</span> — <span class="sample">Farm {Cavalary}</span></p></div><h5 class="twx-section">{{ this.info.ignore[0] }}</h5><div><p>{{ this.info.ignore[1] }}</p></div><h5 class="twx-section">{{ this.info.include[0] }}</h5><div><p>{{ this.info.include[1] }}</p></div><h5 class="twx-section">{{ this.info.randomBase[0] }}</h5><div><p>{{ this.info.randomBase[1] }}</p></div><h5 class="twx-section">{{ this.info.groupOnly[0] }}</h5><div><p>{{ this.info.groupOnly[1] }}</p></div><h5 class="twx-section">{{ this.info.ignoreOnLoss[0] }}</h5><div><p>{{ this.info.ignoreOnLoss[1] }}</p><p>{{ this.info.ignoreOnLoss[2] }}</p><p>{{ this.info.ignoreOnLoss[3] }}</p></div><h5 class="twx-section">{{ this.info.priorityTargets[0] }}</h5><div><p>{{ this.info.priorityTargets[1] }}</p></div></div><div class="box-paper footer has-footer-upper autofarm-content-settings"><form id="autofarm-settings"><h5 class="twx-section">{{ this.settings.presets }}</h5><table class="tbl-border-light tbl-striped"><colgroup><col width="50%"><col></colgroup><tbody><tr><td><span class="icon-34x34-preset"></span> <span class="ff-cell-fix">{{ this.settings.presetName }}</span></td><td><select name="presetName" id="autofarm-preset"></select></td></tr></tbody></table><h5 class="twx-section">{{ this.settings.villages }}</h5><table class="tbl-border-light tbl-striped"><colgroup><col width="50%"><col></colgroup><tbody><tr><td><span class="icon-20x20-queue-indicator-short"></span> <span class="ff-cell-fix">{{ this.settings.groupIgnore }}</span></td><td><select name="groupIgnore" id="autofarm-ignore"></select></td></tr><tr><td><span class="icon-20x20-queue-indicator-long"></span> <span class="ff-cell-fix">{{ this.settings.groupInclude }}</span></td><td><select name="groupInclude" id="autofarm-include"></select></td></tr><tr><td><span class="icon-20x20-favourite"></span> <span class="ff-cell-fix">{{ this.settings.groupOnly }}</span></td><td><select name="groupOnly" id="autofarm-only"></select></td></tr><tr><td><span class="ff-cell-fix">{{ this.settings.priorityTargets }}</span></td><td><label class="size-26x26 btn-orange icon-26x26-checkbox" for="settings-priorityTargets"><input id="settings-priorityTargets" type="checkbox" name="priorityTargets"></label></td></tr></tbody></table><h5 class="twx-section">{{ this.settings.filters }}</h5><table class="tbl-border-light tbl-striped"><colgroup><col width="50%"><col></colgroup><tbody><tr><td><span class="icon-26x26-double-arrow"></span> <span class="ff-cell-fix">{{ this.settings.minDistance }}</span></td><td><input name="minDistance" type="number" class="textfield-border" min="0" max="25" required></td></tr><tr><td><span class="icon-26x26-double-arrow"></span> <span class="ff-cell-fix">{{ this.settings.maxDistance }}</span></td><td><input name="maxDistance" type="number" class="textfield-border" min="1" max="25" required></td></tr><tr><td><span class="icon-34x34-points-per-village"></span> <span class="ff-cell-fix">{{ this.settings.minPoints }}</span></td><td><input name="minPoints" type="number" class="textfield-border" required></td></tr><tr><td><span class="icon-34x34-points-per-village"></span> <span class="ff-cell-fix">{{ this.settings.maxPoints }}</span></td><td><input name="maxPoints" type="number" class="textfield-border" required></td></tr><tr><td><span class="icon-26x26-time"></span> <span class="ff-cell-fix">{{ this.settings.maxTravelTime }}</span></td><td><input name="maxTravelTime" type="text" class="textfield-border" pattern="\\\\d{1,2}:\\\\d{1,2}:\\\\d{1,2}" required></td></tr></tbody></table><h5 class="twx-section">{{ this.settings.security }}</h5><table class="tbl-border-light tbl-striped"><colgroup><col width="50%"><col></colgroup><tbody><tr><td><span class="ff-cell-fix">{{ this.settings.randomBase }}</span></td><td><input name="randomBase" type="number" class="textfield-border" min="0" required></td></tr><tr><td>{{ this.settings.ignoreOnLoss }}</td><td><label class="size-26x26 btn-orange icon-26x26-checkbox" for="settings-ignoreOnLoss"><input id="settings-ignoreOnLoss" type="checkbox" name="ignoreOnLoss"></label></td></tr></tbody></table><h5 class="twx-section">{{ this.settings.others }}</h5><table class="tbl-border-light tbl-striped"><colgroup><col width="50%"><col></colgroup><tbody><tr><td><span class="icon-26x26-info"></span> <span class="ff-cell-fix">{{ this.settings.eventsLimit }}</span></td><td><input name="eventsLimit" type="number" class="textfield-border" min="1" required></td></tr><tr><td><span class="ff-cell-fix">{{ this.settings.language }}</span></td><td><select name="language" id="autofarm-language"><option value="en_us">English</option><option value="pt_br">Português</option></select></td></tr></tbody></table><br><div class="center"><input class="btn-orange btn-border" id="autofarm-save" type="submit" value="{{ this.settings.save }}"></div></form></div><div class="box-paper footer has-footer-upper autofarm-content-log"><div class="screen-tribe-news rich-text"><h5 class="twx-section">{{ this.events.status }}</h5><table class="tbl-border-light tbl-news tbl-big-header"><colgroup><col width="135px"><col width="*"></colgroup><tbody><tr class="list-item"><td id="autofarm-status" colspan="2" class="cell-center">{{ this.events.paused }}</td></tr><tr class="reduced"><td>{{ this.events.selectedVillage }}</td><td id="autofarm-selected"></td></tr><tr class="reduced"><td>{{ this.events.lastAttack }}</td><td id="autofarm-last">{{ this.general.none }}</td></tr></tbody></table><h5 class="twx-section">{{ this.general.events }}</h5><table class="tbl-border-light tbl-news tbl-big-header"><colgroup><col width="125px"><col width="*"></colgroup><tbody id="autofarm-events"><tr class="reduced"><td class="tribe-event-detail" colspan="2"><div class="text-tribe-news"><span>{{ this.events.nothingYet }}</span></div></td></tr></tbody></table></div></div></div><footer class="win-foot"><ul class="list-btn list-center"><li><a class="btn-orange btn-border" id="autofarm-start">{{ this.general.start }}</a></li></ul></footer></div>',a);this.$window.innerHTML=c,this.$wrapper.append(this.$window);let d=document.createElement("div");d.id="interface-autofarm",d.innerHTML='<div class="btn-border btn-green button"><div class="top-left"></div><div class="top-right"></div><div class="middle-top"></div><div class="middle-bottom"></div><div class="middle-left"></div><div class="middle-right"></div><div class="bottom-left"></div><div class="bottom-right"></div><div class="text">Farm</div><div class="quickview"></div></div>',$("#toolbar-left").prepend(d),this.$scrollbar=jsScrollbar(this.$window.querySelector(".win-main")),this.$button=$(".button",d),this.$quickview=this.$button.find(".quickview"),this.$settings=$("#autofarm-settings"),this.$start=$("#autofarm-start"),this.$close=$("#autofarm-close"),this.$preset=$("#autofarm-preset"),this.$groupIgnore=$("#autofarm-ignore"),this.$groupInclude=$("#autofarm-include"),this.$groupOnly=$("#autofarm-only"),this.$language=$("#autofarm-language"),this.$events=$("#autofarm-events"),this.$status=$("#autofarm-status"),this.$last=$("#autofarm-last"),this.$selected=$("#autofarm-selected"),this.updateLastAttack(),this.updateSelectedVillage(),this.bindQuickview()},c.prototype.updateLastAttack=function(a){let b=`${player.getId()}_autofarm_lastAttack`;if(a)localStorage[b]=a;else if(!(a=localStorage[b]))return;a=parseInt(a,10);let c=i("readableDateFilter")(a),d=this.autofarm.lang.events.lastAttack;this.$last.html(c),this.$quickview.html(d+": "+c)},c.prototype.updateSelectedVillage=function(){let a=this.autofarm.village;if(!a)return this.$selected.html(this.autofarm.lang.general.none),!1;let b=c.createButtonLink("village",`${a.name} (${a.x}|${a.y})`,this.autofarm.village.id);this.$selected.html(""),this.$selected.append(b.elem)},c.prototype.bindQuickview=function(){let a=this.$button.find(".text"),b=this.autofarm.lang.events.lastAttack;this.$button.on("mouseenter",()=>{this.$button.addClass("autofarm-show-status");this.$button.removeClass("autofarm-hide-status");this.$quickview.html(`${b}: ${this.$last.html()}`);a.hide();this.$quickview.show()}),this.$button.on("mouseleave",()=>{this.$button.removeClass("autofarm-show-status");this.$button.addClass("autofarm-hide-status");this.$quickview.hide();a.show()})},c.prototype.openWindow=function(){h.closeAll(),this.$window.style.visibility="visible",this.$wrapper.addClass("window-open"),k.trigger(k.types.RESIZE,{instant:!0,right:!0})},c.prototype.closeWindow=function(){this.$window.style.visibility="hidden",this.$wrapper.removeClass("window-open"),k.trigger(k.types.RESIZE,{instant:!0,right:!0})},c.prototype.toggleWindow=function(a){this.$window.style.visibility=a,this.$wrapper.toggleClass("window-open"),k.trigger(k.types.RESIZE,{instant:!0,right:!0})},c.prototype.tabsState=function(){for(let a of this.$tabs){let b=a.getAttribute("tab"),c=this.$window.querySelector(`.autofarm-content-${b}`),d=a.querySelector(".tab-inner > div"),e=a.querySelector("a");this.activeTab===b?(c.style.display="",a.classList.add("tab-active"),d.classList.add("box-border-light"),e.classList.remove("btn-icon","btn-orange"),this.$scrollbar.content=c):(c.style.display="none",a.classList.remove("tab-active"),d.classList.remove("box-border-light"),e.classList.add("btn-icon","btn-orange")),this.$scrollbar.recalc()}},c.prototype.bindTabs=function(){this.$tabs=this.$window.querySelectorAll(".tab");for(let a of this.$tabs){let b=a.getAttribute("tab");a.addEventListener("click",()=>{this.activeTab=b;this.tabsState()})}this.tabsState()},c.prototype.eachSetting=function(a){for(let b in this.autofarm.settings){let c=$(`[name="${b}"]`,this.$window);c.length&&a(c)}},c.prototype.bindSettings=function(){this.eachSetting(a=>{let b=a[0].type;let c=a[0].name;if("select-one"===b)return void("language"===c&&(a[0].value=this.autofarm.settings.language));if("checkbox"===b)return this.autofarm.settings[c]&&(a[0].checked=!0,a.parent().addClass("icon-26x26-checkbox-checked")),void a.on("click",()=>{a.parent().toggleClass("icon-26x26-checkbox-checked")});a.val(this.autofarm.settings[c])}),this.$settings.on("submit",a=>{a.preventDefault();if(this.$settings[0].checkValidity()){let a={};this.eachSetting(b=>{let c=b[0].name;a[c]=b.val()}),this.autofarm.updateSettings(a);let b=JSON.stringify(a);localStorage[`${player.getId()}_autofarm`]=b,d.$broadcast(f.MESSAGE_SUCCESS,{message:this.autofarm.lang.settings.saved})}})},c.prototype.addEvent=function(a,b){let c=parseInt(this.autofarm.settings.eventsLimit,10);this.eventCount>=c&&this.$events.find("tr:last-child").remove(),this.events.length>=c&&this.events.pop(),this.addRow(this.$events,a,b),this.eventCount++,b||(a.timestamp=Date.now(),this.events.unshift(a),this.saveEvents())},c.prototype.addRow=function(d,e,f){let h=[];if(e=angular.copy(e),e.links){for(let a=0;a<e.links.length;a++)h.push(c.createButtonLink(e.links[a].type,e.links[a].name));e.text=a(e.text,h)}let j=document.createElement("tr");if(j.className="reduced",j.innerHTML=b('<td class="tribe-event-time">{{ this.date }}</td><td class="tribe-event-detail"><span class="icon-bg-black icon-26x26-{{ this.icon }}"></span><div class="text-tribe-news"><span>{{ this.text }}</span></div></td>',{date:i("readableDateFilter")(e.timestamp||Date.now()),icon:e.icon,text:e.text}),e.icon||(j.querySelector(".icon-bg-black").remove(),j.querySelector(".text-tribe-news").className=""),e.links)for(let a=0;a<h.length;a++)e.links[a].elem=j.querySelector("#"+h[a].id),e.links[a].elem.addEventListener("click",function(){g.openVillageInfo(e.links[a].id)});d[f?"append":"prepend"](j),this.$scrollbar.recalc()},c.prototype.updatePresetList=function(){let a={},b=e.getPresetList().presets;this.$preset.html(`<option value="">${this.autofarm.lang.general.disabled}</option>`);for(let c in b){let d=b[c].name,e=d.replace(rpreset,"").trim();if(!(e in a)){let b=this.autofarm.settings.presetName===e?"selected":"";this.$preset.append(`<option value="${e}" ${b}>${e}</option>`),a[e]=!0}}},c.prototype.updateGroupList=function(){let a=["groupIgnore","groupInclude","groupOnly"],b=e.getGroupList().getGroups();for(let c of a){let a="$"+c;this[a].html(`<option value="">${this.autofarm.lang.general.disabled}</option>`);for(let d in b){let e=b[d].name,f=this.autofarm.settings[c]===e?"selected":"";this[a].append(`<option value="${e}" ${f}>${e}</option>`)}}},c.prototype.bindEvents=function(){let a={sendCommand:(a,b)=>{let c=`${a.name} (${a.x}|${a.y})`;let d=`${b.name} (${b.x}|${b.y})`;this.addEvent({links:[{type:"village",name:c,id:a.id},{type:"village",name:d,id:b.id}],text:this.autofarm.lang.events.sendCommand,icon:"attack-small"});this.$status.html(this.autofarm.lang.events.attacking);this.updateLastAttack(Date.now())},nextVillage:a=>{let b=`${a.name} (${a.x}|${a.y})`;this.addEvent({links:[{type:"village",name:b,id:a.id}],icon:"village",text:this.autofarm.lang.events.nextVillage});this.updateSelectedVillage()},noPreset:()=>{if(!this.autofarm.running)return!1;this.addEvent({icon:"info",text:this.autofarm.lang.events.noPreset});this.$status.html(this.autofarm.lang.events.paused)},noUnits:()=>{this.autofarm.singleVillage&&this.$status.html(this.autofarm.lang.events.noUnits)},noUnitsNoCommands:()=>{this.$status.html(this.autofarm.lang.events.noUnitsNoCommands)},start:()=>{this.$status.html(this.autofarm.lang.events.attacking)},pause:()=>{this.$status.html(this.autofarm.lang.events.paused)},noVillages:()=>{this.$status.html(this.autofarm.lang.events.noVillages)},villagesUpdate:()=>{this.updateSelectedVillage()},startLoadingTargers:()=>{this.$status.html(this.autofarm.lang.events.loadingTargets)},endLoadingTargers:()=>{this.$status.html(this.autofarm.lang.events.analyseTargets)},attacking:()=>{this.$status.html(this.autofarm.lang.events.attacking)},commandLimitSingle:()=>{this.$status.html(this.autofarm.lang.events.commandLimit)},commandLimitMulti:()=>{this.$status.html(this.autofarm.lang.events.noVillages)},restartingCommands:()=>{this.$status.html(this.autofarm.lang.events.restartingCommands)},ignoredVillage:a=>{let b=`${a.name} (${a.x}|${a.y})`;this.addEvent({links:[{type:"village",name:b,id:a.id}],icon:"check-negative",text:this.autofarm.lang.events.ignoredVillage})},priorityTargetSelected:a=>{let b=`${a.name} (${a.x}|${a.y})`;this.addEvent({links:[{type:"village",name:b,id:a.id}],icon:"parallel-recruiting",text:this.autofarm.lang.events.priorityTargetAdded})}};for(let b in a)this.autofarm.on(b,a[b])},c.createButtonLink=function(a,c,d){let e=Math.round(1e5*Math.random()),f=b('<a id="l{{ id }}" class="img-link icon-20x20-{{ icon }} btn btn-orange padded">{{ text }}</a>',{icon:a,text:c,id:e}),h=document.createElement("div");return h.innerHTML=f,h=h.firstChild,h.addEventListener("click",function(){g.openVillageInfo(d)}),{html:f,id:"l"+e,elem:h}},c}(),"undefined"==typeof loadingAutofarm){loadingAutofarm=!0;let a=angular.element(document).scope(),b=injector.get("modelDataService"),c=injector.get("eventTypeProvider"),d=injector.get("hotkeys"),e=function(){let a=document.createElement("script");a.type="text/javascript",a.src="https://goo.gl/A01j8K",document.body.appendChild(a),a.remove()},f=function(){player=b.getSelectedCharacter();let f;f=localStorage.getItem(`${player.getId()}_autofarm`),f=f?JSON.parse(f):{};let g=new AutoFarm(f),h=new AutoFarmInterface(g);g.on("start",function(){h.$start.html(g.lang.general.pause),h.$start.removeClass("btn-green").addClass("btn-red"),h.$button.removeClass("btn-green").addClass("btn-red"),a.$broadcast(c.MESSAGE_SUCCESS,{message:g.lang.general.started})}),g.on("pause",function(){h.$start.html(g.lang.general.start),h.$start.removeClass("btn-red").addClass("btn-green"),h.$button.removeClass("btn-red").addClass("btn-green"),a.$broadcast(c.MESSAGE_SUCCESS,{message:g.lang.general.paused})}),g.on("presetsChange",()=>{h.updatePresetList()}),g.on("groupsChanged",()=>{h.updateGroupList()});let i=function(){if(g.commander&&g.commander.running)g.stop();else{if(!g.presets.length)return a.$broadcast(c.MESSAGE_ERROR,{message:g.lang.events.presetFirst}),!1;if(!g.village)return a.$broadcast(c.MESSAGE_ERROR,{message:g.lang.events.noSelectedVillage}),!1;g.start()}};h.$start.on("click",i),d.add("shift+z",i),e()},g=document.querySelector("#map"),h=angular.element(g).scope();h.isInitialized?f():a.$on(c.MAP_INITIALIZED,f)}
//# sourceMappingURL=tw2autofarm.map